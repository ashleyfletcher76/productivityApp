Thoughts:
* Use Java -- most familiar at this moment
* No need for a full frontend -- no framework etc -- can just use static files
* For simplicity when building we could use a Makefile -- docs must include how run the compose file
* Begin with bonus, simpler to start with it
* No need for spring security -- could add config issues -- keep basic and stick to task
* Dependencies ?? Web, Validation, JPA and H2
* Update the README as we go  to keep track or curl/postman possibilities
* Do I prebuild the gradle or allow the dockerfile to build it? Not sure
* Keep H2 console or not -- security rish
* No frontend stated in task -- stick to task
* Maybe return dto in in todo get all
* Returning dto doesn't work of course -- need to send all Todo entities


Key Points:
* Keep simple
* No frontend -- rely on postman or curl
* Microservices - Both services to be containerized
* No need to hash password
* Use spring boot
* Keep documentation
* Token should include data identifying the user
* User must include token in header
* Basic error responses
* BONUS -- use H2 database and add basic test -- integration or unit tests
